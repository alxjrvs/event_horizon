- content_for(:title) do
  Questions - Launch Academy

%ul.breadcrumbs
  %li.current= link_to "Questions", questions_path

- unless current_user.guest?
  #new-question
    = link_to new_question_path, class: "button success" do
      %i.fi-plus
      Ask A Question


%dl.sub-nav
  %dt Filter:
  %dd{ class: ("active" if @filter == "newest") }= link_to "Newest", questions_path
  %dd{ class: ("active" if @filter == "unanswered") }= link_to "Unanswered", questions_path(query: "unanswered")
  %dd{ class: ("active" if @filter == "queued") }= link_to "Question Queue", questions_path(query: "queued")

%dl.category-filters.sub-nav
  %dt Categories:
  %dd{ class: ("active" if @filter == "Code syntax") }= link_to "Code syntax", questions_path(query: "Code syntax")
  %dd{ class: ("active" if @filter == "Code review") }= link_to "Code review", questions_path(query: "Code review")
  %dd{ class: ("active" if @filter == "Problem breakdown") }= link_to "Problem breakdown", questions_path(query: "Problem breakdown")
  %dd{ class: ("active" if @filter == "Best practices") }= link_to "Best practices", questions_path(query: "Best practices")
  %dd{ class: ("active" if @filter == "Other") }= link_to "Other", questions_path(query: "Other")

%h2= questions_header(@filter)

.questions
  - @questions.each_with_index do |question, index|
    - if question.show?
      - if question.in_queue?
        .question-queue{id: question.queue_id}
          %div.row
            %div.large-2.columns
              %div{ class: question.queue_progress }= index + 1
              %p
            %div.large-10.columns
              %h3= question.user.name
              = link_to question.title, question_path(question)
              - if question.in_progress?
                %h5.assignee= question.assignee
              %div.queue-buttons
                - if question.admin_access?
                  = question_queue_update_button(question.question_queue)
                  - if question.open?
                    = link_to "No Show", question_queue_path(id: question.question_queue, question_queue: { status: "no-show"}), method: :patch, class: "ee-button no-show"
      - elsif @filter != 'queued'
        .question.box{ class: ('deleted-question' if !question.visible) }
          .row
            .large-2.columns.question-data
              %span
                %p.answer-count{ class: ('accepted' if question.has_accepted_answer?) }
                  = pluralize question.answers_count, "answer"
                %p.vote-count= pluralize question.vote_cache, "vote"
            .large-8.columns
              %h3.title
                = link_to question.title, question
                = question.queue_status
            .large-2.columns.watch-buttons.text-center
              .question-category-tag= question.category.capitalize
              - if question.watched_by?(current_user)
                = link_to "Stop Watching",
                  question_watching_path(question),
                  method: :delete,
                  class: "button alert tiny watching"
              - else
                = link_to "Watch Question", question_watching_path(question),
                  class: "button success tiny watching",
                  method: :post

= paginate @questions


