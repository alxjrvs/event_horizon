---
http_interactions:
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjQzODAzMzYsImlhdCI6MTQyNDM4MDIxNn0.F8RPyZ29IPdYlh9fPPK_gcu0-Sff2V6elwq44nr-xI3hSw24Qf9ZaHV7zf7HNfuk6Sy2Dunwey94Vzzjb2qBw367ZNNWYvHEePI0BdxQ2s-xaZUWxe_jTr64f1ac-aE0UOC_7nPOx22qAj0fZhUn8HuFyKHwLJUBM559WKzIGb0
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 19 Feb 2015 21:11:16 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.08
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.HwFmM_q5PMtBJJS_Ps6NK0M7Wb2A9XFsrvDs84ow0_WOIReGqWGBVC-lF6hyGEP3ip8VpXDpGpa6CA",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 19 Feb 2015 21:11:16 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 19 Feb 2015 21:12:33 GMT
      Date:
      - Thu, 19 Feb 2015 21:07:33 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/CII8UXtEyyGxw2FxaRcFu68a2uc"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '223'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.08
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/CII8UXtEyyGxw2FxaRcFu68a2uc\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20141123",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 19 Feb 2015 21:11:16 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/launchacademy.co_l2e3mks1ftini9evjlkq9amokg@group.calendar.google.com/events
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.HwFmM_q5PMtBJJS_Ps6NK0M7Wb2A9XFsrvDs84ow0_WOIReGqWGBVC-lF6hyGEP3ip8VpXDpGpa6CA
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 19 Feb 2015 21:11:17 GMT
      Date:
      - Thu, 19 Feb 2015 21:11:17 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.08
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        9PV3qi2wsq9/VMBBo4hWEm+n1YkY2TFbIja/UykK1TLlHwDkVU1QIPzwrz/Q
        +A+6bM8/+hn9Utrgj1n0M/nVL012y0daHIZOXvfwPoLHX+zI2Ak8miXwQMBD
        kVVBkdQa8EBF6uZATgMc8MFk5vJYCNMocou2nJGjx7u5KehPRnw+NYfJHEUF
        NJfnoQ6f5tYQxE5LtDpVuQ/oAvId38/srsBDon2dJPVU0eqo0AfEOGBJ2CvS
        8x09GC/TyHJ4Ze4TLSZ/NlTIitF0xiJ5cy1GTVp42M9YpwSKPB0iVTTUsnie
        nGPMkiEpy09CDCk/fqkrZSWnVfkp55a+gyhJIbKSslhdFr9wF4YYZfHqMcgc
        NyOKFGVYfn5yp8zYrz2aLIo7lPuYQ+QlMHkOxPKpXj/9KUsW/ewvl4j7uWrS
        TS7NnjibPW+mo8fmTwY++YeAT97NY9OMHgcR+YUCL6maJIp1Ba5SCCEIBYgV
        vwyytBjDzCOfE7UGfIOHXA+un6yevjAHTuoM04V9dRfp8U1iDoxiNGgtCsM0
        aFHbDfjWIxVYSw3ku1wPFYjiC6Itd+n9cgII4YLTE8sPcdVGux7/viEZi9gU
        y3fJo6DteZs3ZZQWKOVux2Pffm5kc0SG7/Hl0nzs/TlKyeydVKJm8ToMlUhU
        NVGW1TpkSNVUzWExLeJYJUedl8uCmLqOgFtrTdfz5rSXg3N1yVuRKNpRWKIr
        HepLoirBL0uzJaKNNW0KPSi2IsN6pCScirXI8JLNTZuycFcJVW2Mi+H1xUVV
        AbKK9fT83C6rLb2b0kRkMQxpY4eqZOU2TZOsKGO/8DFTN6gmck1L6XJsM5aO
        ZFzd8ISrsspP2DzKqI4zG1Nt5BNVcgheZfh1Cjkz7Py4WLJPRdNGQlyQK32g
        y7CmMBN4hSiTElmX89v7zoXx8IHhwCn9+EdtpjUzbv8cc8jvps00C/5hYJYs
        izyU+TpeZTl0JwSItDyZFojXNNEXFC/1tKItug4jeooRDBfWIFxawiU/GpxJ
        t4O7VF86id13JaclokNGvkKpnoRt7KhvRtb2nnmTe8rdJF4cL7jzpMxyf1om
        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
        J/yOFs66bKrwHKAKknpOiA1dmLW5um6sTZjZWIuLnioLTJ7y6GIcHPSKmjBL
        fEEz2I1Z4n7h5+2C/xbMIIXHTDhdqW4R5QhmHqoTK5CMSZ7ntu6mvmDqtdF4
        0b75MBDv8i7JJkbvxqPinWD1v8r0opt2+h25Phov3IH0Y17eA7PYSEnC0lWp
        skXU19DMDTAa0ON7Tr3kJar/r6l9zCHpLaxr5pH59pdPJ1+7Hy/uLj9/+wvm
        1AIGmZOiO1PGFX0pm46d5cVJ8EkiYpWuOU7m/xfzCVdAxkmSeWlW0AJc5AFF
        lw53FntFfwCAMZ7rs0L62wzwMHteH0UOHS9fBTLqq8sxi9l7Rb62S+rbABlR
        R0ZPTagAGTkYkUSjziT05OloJNpGLhMt9Iy6yoG6fSHohJfSoG8lRjARzP4w
        6JA7z+p9XVy35XgwrqccSMUtAzMf1d2RL6KgyStrSA8u8cprsvptH70hXNvz
        QdT/xt2uvP2PU/7JffJmqB7dRhgs2RIWK4+D7hXfzkrn/0UeOslirUuVjvJ1
        pIPG8NuDF8Bt+QtOaMrcwqbI+OdETY67dQtilzixZ16UpzCkdKj4tkN9buTZ
        6MZGwirAhpWSVjCBwCJFNkKEOsSxx/TAFTWgWUQEAR5CB4MKB92pHlhTfsre
        Y8t7N6xtx4Z97L09yj6DYnU3HSYl3+VpfP8Yn0jVetT35ZfUNO04W9d84s8/
        qfZSEQRZQhp0UuEpGo9ENwky27UnjmXxMy3gU2ukUbGuNAMaDJb04iqz2nfR
        sJ+Fw/aXuTV2s85FdzIcu26ntgIHpBiBNaaAIboDbDdHEqW6FwNqQqys4Ypu
        yR8oKxcKDQ2jzmMabGnQpMpc9/qmd3F20+VO7s5A07q+7V13UdM6gNFrKidZ
        q7ZXV06K+9UjbJedN6FjodirvCxIFc6nXHMV3VL4UZCLnu0E2SyVRUGIhNpK
        rntu1IUV0h2fBsb91yXt34XG/Q0xl1+Xnd75rFNbyXUhzBLZzce8OVJWq3of
        /JEs4oytU4yIv9jgd6+OKOXxisOlq3aynZMPYIPLRCUfvlV1Ff94+ZFrbLR4
        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
        MX/U3Ea6DMs2AXhWuAQATR3qhb8VjXnLdObiKhHMTu00tZFQ9A4Og7XoeNpw
        jb/hk0taud9KBva1g1DNXOT6eezhtR5Y+ARhpVKLNbQEFGvbCVKk4gG9GfyN
        lwQLmRvR1GU9KdGDx5oKZ7YXFpolEpr8xjGVFNG38BGGjJ8DsZnC0wfQAXXx
        COAVfnEj0DePSg6TCJTKGHTJjPUsW93nRwpmJ/VZ4QmOO9ugXk1XnEmOjS40
        rmgpj6woSQTnw+F2OMa2kEWoo+A74iLfWt8GvIBTOqOA2+HmY2tuEM9Hj0+W
        ORfJ92kUlbkQ216YoCuPqVjf7ROiftgnXqNJ/1RvSJi9nV1uY5/YDrZvZ5/Q
        eVmoyOCcunk+5qeel0vEGOVpMgpGY1+yjLrKh82+K1j9aG72/djqfVkMgqFg
        grUN+8fUaN1MQKOuS5NeoT95scT/2UgiV5UPnyMnWNkBvZ/Q+Eks5lAT8uvT
        ml5ZT7srKWpDiLdLwtsQYrCHFEVWqoR4ZIzHlqqGNElcOKMTmiSJM8EX6xLi
        YXA1pcEXsUtk1wS9ZNgfukjj3Amv5lbrPO2Q2oS4cH4xsvcdQqwg9MuY7NDU
        +CohfnSTXRd6FXxQreSturwiHZ35yOeGlfglg894PfUg2z8o2z/j6tL24/fY
        LiBvQ7ZBtCVelatax8gjUbXJaKznpqqY4TgUIs2a5GJYF2VYtz9YdsnXxTCI
        ZKvfEbtBN6eB9GAs3QkVQXaDWijDNmWbvNhVtJBtMOAFZvKpysuyfcZktqAt
        5P7KdW0nyrziz2phfzLhHWZDYJdFFH+wJ4qG7kUYbONQmMOMtJAHDHidkv4z
        GKDuhwHbBelNYIDEixLo6XwV4fp4pjmT0CammsdUHAc0mlhUs2dCXVlTNBxI
        Q5Llw97VuCvezQe97tTon88ouXGv23ek06+tQV3hzNF2EK6X713EMitsH0Wq
        iiNOMD2ZuX97LvqBWYVEHnMf4ZWB6b1F/FuPfx5zBQerFRUkO+xyAQHy0IP1
        wZnFcYqK8g3WXuwnNcORLE6OzLf/wE52K1bagsZ3012xqjH3QubpWGdijSLM
        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
        I40BUrkN4IpVxUE7YT/vBppCz05nzs27uR18mnWDvm+Fl5N+cO9bo2rioDpX
        N8hS09KfJwpvIKMnUVsq9tfVtWaZK3vleugg/bSk4isXGhzZETFvU7AVHtFG
        XHpoDjgSItKnX8JT6s0p6Psrlwap9yoYKuTOU7SdufMU/bvb6zbvrJchFAww
        OwxFUUs6brRkYMjhKHKHQzqK4maUNjyb2E5UFdZr9+w8AMckp4EZ9YkDW8Cc
        dok57wb+qBN0xxapCutVaXCeKwRs2yYU1o7UG2UAPU8dlNsoB5PhYxINBOEm
        9VPRwY/GwIV0laeuVy45vuECGD9Z8ABz1l/SPJBw1F9CLIaTPnYwkqJglxh8
        /hIWpx1IinTie1FWjiddWoi0KRRT1BTNcLS1eH20q0pbwyC6rAuwn3UQHyqF
        /IGigeSAhTUWxcYpDnHtIaVLBosO7Kswk36WjmiCpWXLAdclAZ0TePcHBRUt
        yKiDBbyciLwxWNEzDpe/qF726QS7XIp/8mH8JEmH0vG5KINGAST5+FBMCnJE
        dcEBw7hhXGZd06U4qJchsOw2w68SfC/TjjSfIfLapT6KkB1Mu82i8IVI8Yau
        yhpRS7xHz1Em+pAMBmFsx5EaWZM0b5BmaFclxenNH/fO6DrsBP3ACo9GdtuY
        W+Sc2Oon0hk5+W1FUlyvEYIhR11tka2mXQP9THjvOqkrSpn3WM5WyEFRLnML
        oRpB+ljwTtEJRMZjcC8/gLzDoDZHIGOO6MNQ9P+UZvAFFzArSDKBNIVFpbaf
        C5wx5BASaYbEhq3LbLApqV+gfyFTNz+M9zJ6GEE/gJ+sfIhUIG+Qe5Cf++lz
        QRdtu7Dq0iyZFWLvPoYLiqh6wMlYg9VieqR1Vk8JKkUAUX4JHz0uxyIve96n
        j7jsIfExubCcjwKeU0wAw6uIq8EAq5uK8mmA7zO7Lt4uF/mIhkalAZsusjfs
        ngYCeY0/JE9pTBmmThxshEHKyofzw4uWsRrZX2RFUrZ4xFdyyD+j8On7ySGf
        LZta0wqbReuL0QqmrGllueuJOTKi1PNUFoSeNwCDe+wHigGHVtU7MvLvLtrm
        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
        6bbv5Y56onSPh5VG+3SlpWwVSAIvm4D0qmtGafFXRdG+U+pi/10+zsO5h2Xg
        PpXOosEgwDrwHnOk91Oaht64AD/+I0ekuLL2kddQ396iQ9sn1Idn72LLbN5/
        f6Va7mGRWaovslA7j+RpTmrfmBocMBabaHtIa23H7X1fCnt55LhiM//AGGEy
        QoynOyEJdsQJfiA39rj3AMVVoMvN7fd9INleaj2JIpuyqpsNo4wF24iUTG80
        m0qehaZhKXJIIiX3BnFVqvKibdw7x59Id27fO58v84ue64G6zDsBfH/jB3bV
        qpLs4GvreCSSiBl1rZQF+/tVZRkxAHgCieiZPPTZWGonXmixZLjOE/CqDavQ
        ho29tGFjN224eYv9D9CGu4lMgf4/LJbxLh0+68v+B2ghNq4Pi12zU3/NapPt
        ffPdYPof4+k/2tgvUGuA5SYrhq6QEq2h6NFwkN25Rp42G/SO+Z47if3GqFlV
        OUWndz3pk75s3ww153NH7Qan9/2b+5ie9afWcf+uSypnjSLbavlBHhDwrjRQ
        MXW9UVZO0UHiuBXu6GugpDIkLHgbzR2RsLD+6bu7VjdvhBeRZVE0YuB/zZIs
        yzh3NNmTY7OZ5UPT8Dw1CJqaT/Kq9jBVr8fd46O4c3aod9VLpT8fa/RmDHtT
        Vrvt6cy56Q46o8P77vGh0un1P3VGJ9PO8eH0xquEE17nCtxoIazdVoOQg8Mg
        nIheb2plyZfTPET0pq0bdjuXzTNUNn+BLfrQiBLvoPnAiCquiLPZj0KhsAOW
        eDZ902XTr7dRMv4GM23xlve4Q8LsPEmKnStMsL9dXn76cNI6vTz547ebk5P3
        H27/6+3Fp27vN0X+r6Pb48Pb304v/7amrNf73Dduu2clhvpnSQwTdL7ZNMsw
        5alqj7K7ZOxFLB6OB17TzIYT1SJWVXme2153RMPLezvIYotcT/skC2jP1p22
        Qzrk3ex2VEGeR+X4QToyf2q4MreIBqIgkSCYCLpRN0sx5c88Dk5+TLGaRFSR
        XDG6JMJ4RljsYtg/a9f/BQTGg7kmO+t0on23Tt+8zH944uPfpP/9b//9b/8f
        K0FaXiSsBAA=
    http_version: 
  recorded_at: Thu, 19 Feb 2015 21:11:17 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars//events
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.HwFmM_q5PMtBJJS_Ps6NK0M7Wb2A9XFsrvDs84ow0_WOIReGqWGBVC-lF6hyGEP3ip8VpXDpGpa6CA
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Fri, 27 Feb 2015 17:40:10 GMT
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - text/html; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.08
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAPPLL1Fwyy/NSwEATYx0sQkAAAA=
    http_version: 
  recorded_at: Fri, 27 Feb 2015 17:40:12 GMT
recorded_with: VCR 2.9.3
