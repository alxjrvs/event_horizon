---
http_interactions:
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjUyODgsImlhdCI6MTQyMzE2NTE2OH0.SPzrCnMtVkxC1gJpDspqI15uREuujRHVu_1B9IzPSAc5Tf3b4CVGnkAVRGfWrJRP9BJS2vPiybLuV81No1wrIkqbO5D5QK3jV2LR07a1Fcl-zqytb2BUS6iJPV1Gp8jX23OvF8Lfb-lLz_4asLU-ANYDbu9YKHzhzeoD3IexMHQ
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 19:40:28 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQHMKv5lOPlnOgmKUfyl8dIHmBkwJalVPtRTqyHo7ATbOPzjlBiGntKCFSHWzGEYSDFCpj42wz_HCw",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:40:28 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 19:40:37 GMT
      Date:
      - Thu, 05 Feb 2015 19:35:37 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '292'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:40:29 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQHMKv5lOPlnOgmKUfyl8dIHmBkwJalVPtRTqyHo7ATbOPzjlBiGntKCFSHWzGEYSDFCpj42wz_HCw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 19:40:29 GMT
      Date:
      - Thu, 05 Feb 2015 19:40:29 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:40:29 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjU0NzksImlhdCI6MTQyMzE2NTM1OX0.Vj0_9t9oo36m9X_3YoHDHtKogSJa6LuCgBOu5st4vV2E_nRsKIumatqVoehGGbxs84uXRPHj8uhrqLQ1rZgUXe2Dl6fNmP4lUjLoJ8zcMLmzTFfbhvKAdlLU9Ei4ruNTb7vDof0Tj5Q6DnmDvmuZxwYbVWT2l5UBWN-ret_ecLQ
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 19:43:39 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQERDfE0mOlCoCkIMpNVHdriG-c1WQH_VS2hZFBbJQRiyP4buBqZPNe4i-cGvGzpjLsJc_jxsmaurQ",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:43:39 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 19:46:20 GMT
      Date:
      - Thu, 05 Feb 2015 19:41:20 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '11394'
      Server:
      - GSE
      Age:
      - '139'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAO19a3PbRpbod/8KlOZW2a6lKD+S2Um27gdFljOasmOXJE92
        Zz11CySaJMYgwKBBUZxU/vs9j+5GA2iAAEjJUoKtrYlM9ON09+nzPqd/feId
        fQnj4Oh77ygI5TS5Een2T6mQ2Rshp2m4ysIkPhpBK5H5c2z1+Wgr/pykN6/e
        Hr+MV+9/fr3+Tq7fv/b/8+zbH5KTD3+b/euHv/3n1fn7f7zdLF7J2dnsb9/c
        /vXHb/6RfD6iccwsfxepxMFhzJuX9CkkMKZ+JOLAT7+/eU2/xv5S2L/TjzdW
        Z26WiptQ//TqxctvX7x8+S19yMIsogHO1ADe6ccLBsVaInx/JzLpbZO1t/Tj
        cLWO/Ex44kbE8KsfB16SLUTqaSi8wM/8MQ2TbGKRvkmWfkjDzJNkHonxNFnm
        X39Sa/iRvvFip0ks4bdfn3je0e3LP+PnRZatvj852Ww243yUk3Dpz4U8oQ4n
        qzQJ1tPsRMNx/PLP41U8xyFhmNev+g7z+hUN88T7jXYmma6XsHIf9+ZdGH/R
        w0oYN4BNiZIVnIA9PP957K9W0ox6MgtTmcFPtGKYM0umSYRjIYbRjxNfik9p
        ZI+fw+2vQkmDmwFvXp+Ybh/9bIH9ql/TJMl2D0pNpUhvwqkZyzFRNl3or/QP
        XoufwpFmsAf6CP0oU38Cym1XdNwyS0N1NhVsewP4482SdOln+B8PsMuDXVnB
        6Yix6TLz1zTu0b8k30P4VcTrJfz0v/gP9QH//Gf+1bq7Mm95qUaX3ibMFt5Z
        EmdwxMfXAKyXzDw4piic0omflAeNEv6AkPyyhsuLH38jnJuFIgpkp6VfiUhM
        M1izXIlpONtCQ2+zCKcLjwfzssQL42m0DgT81/M92O0s9KPK/jSA9UVsO8EE
        NMGDPmPvf5I1UQj8lxcGsEMhQEWEIfUAhf8FoBM9gL9v4DuTDNpR7OVPp0LK
        kffLOsn8ETVMxSpJMzn2LsUv6zAVgbeOI2hEHdUo0ND7cLqGQV6NX8D6v4i4
        xSITH3r8P2rdabGlmQz+TddpCgv21nArWky/SkWWbT/CPFXUnyQJXLXYPf+l
        yNZpLM158vYBG9IkhyluFMbCm6TC/yIdNyJL12I3jHQOn2A93bDhxg8jfxIJ
        REXYDdohGspbrdNVgpcIf0LqIdJjSSeY3x846zM40Ake69bz00mYpX669XhK
        z5cynMeABzC4T5s98ibrzJOLZB0FXpxknridCmjwzQtvugBSM0VKM/Y+wGQp
        4Rx2ulh54cybAF+CKYTGpKDFwXHvTjty8dHzgyBFtAVagcgiQ+CPG+CJQtEu
        mERmXpKG8zAG3gnwwr7Dt1AinHRLfEAuWLSIYfOmADLsHcICJ70MM9kMuWJN
        iPKa5hL+vzLrAMFiJQwpaqT92NHwDdOjsur3fgxMk+++bi2JMPJOdphkDHgc
        JHG0rZ/t76HYuOd6ov5Hb4KcLsTSN7zndBqZTWAhCn8ZFQ43mSDlUj8CrsDe
        Z6G9W0rA07C5kKIK8vm1P9cIAawd6Tp8GRe3CBBlKR1D+2nqb+tGfhciMs28
        dA200ktimoKpK8wUZ2kSAdrIbGwGKE3jHf2fVMzUZlzCKAwUb6aBTQm/3Vat
        WWZx1d6zz0Z++JM/jT4fPR9bIxjCZbcpblQsbrOPgHDXNkVvDxXRcrhPTFh4
        qxBEHBZ46FzBHBLhBWCAoMC1y6A93M848WbrlGRc/iqJqviaEo6QFTOXnoLw
        RYNebeMpzwpj5vSnsibTbp81gZzkeyiUAxtOgOUgPFm4JBINjCgNQSz18ILR
        moGTpMi2swX0W/jwCQhpPIdxJIgWwt4GIEv4J7IkgN7ek84bYg7PtSHmEo/U
        nSWkrNxb+vW+7y6sEOjOVJRvbve7caFFplSPfXr2jm5xaey9b56GuXzvcAPb
        3L2cJmiQgKaI7iAhKNCxwNaJQSI7GnsfE/gdRYkbPwIOiUj0ved9jo+9z0dx
        EgOo3rH3UQuTsb65Y9Vklgrxw1puL4F9iLTYGFmKuehwf6HpyQTaAmayZoG0
        WI2T7u5P5EyzK2gV3lgq8CaMIpRxBOi+LBSlSpHgkY3ki5IM9fECQMswUl1B
        GFqEASCHBmiTAsF2AgSiH33cHzSew4CGI7tBQ9sBnJGGjZT2Imj0k1yEK0P4
        DTjXREsQBRZASXwYUTWBe7oMpSSBVv2kIKLWBCKxtSAI8axAxfEnYRRmW1yH
        FIIgtswRcJVkjtd+DKKir7U8w/ZSpWYYzQ9/NNAC4o9DkLnTTPFD758uvkjI
        67gLNily3wXqae4o3Xvd2kG68qF/NbC67517tswiCC0unCIFdLTYfbWegNCu
        e9JBhsw0VUseROMFohb1fUcCaz4ri/LAWkD+Y/VJ9ZinyXrV0IW+68YBGZEa
        WnODsef9lGSwqOsSjs1TELBzAmQtdwRyuVrsSA2I+grhGeoorISgwIrUG8Rv
        GAV6AH6Nrf13I1wNyjUjnUE7jXgG9aAf7XlvlADJOIxsbYV1LFwP7TbtBclF
        /pItH2pfR3DoKwAYdTQlcKq93yJ2aMGAtGVEO2t/x3pdajG/3ekdLUoSZyU1
        RokSZ5a9tIssUdzRbrzQMjxVyeSHFdO4khzwoGUXA/19yC76j53Ci1FcC0BZ
        anM3wH4UCVCOFYiynh6jvH4Qbki8OEa5wstA1K09T7leLv1023170E5f3fe9
        LpLRo9uwPFQm/gECWS8JkDSRf0PvKt4/e0uyGJIOFA9i7+L0p1PvGjvgdB5a
        giekQQA9GnliPAd+cHS+xrt58o91ChoGEJjnlf12UwHUm2soAX163FYBvRSl
        2LHdS0gU6RTFRlL/VOaI29JGYO/ROeiO23u1Fkyt2VvffjrOwX7wB7UfVBG2
        /tLz9443nxHgsq9KLGYzRPQbo8WRykPbSSpPQdQk+QyVJ3WJc+KJau8xnkqz
        XD9oyYOWXNKSC1Rk4k+/oPAfB2dJlKS9MBpVBCTgSUU6JFIC/16IWzjkabgE
        EJVr9/PRn168+MtffB9YOG+BumtbT67Rhy4CwVQW3V+3xygIBDzLRWDa1gpb
        qmGv9TiXkivBKKi8AVyboc8JNCLSFIkubvV6zfql4mk5l0sAuYB5hXHIzA6P
        yfoE3YgIP69dmeJ8l2KJG5N2lhSuLR0+1YPspD/sCQ2lQwCtFR3O8a5oOJ1i
        QyAikQnXKRXcpNVF/LwQxEAKIJFIow4CYZ4I4BdqCqBuybJ4NiQA2XTUbLhn
        7xFM8NaPpHDKHjP8Uj6fu1YTLZjvR2OEwxf7Eol8jD6kYkb/dzekgvnKPjho
        rcLgHY+aox1j22FQ7MAa/EE0SRSn2iiTd2shMEJdJ2XB0mu+us2g9nLD2cD5
        8YhXIssABhft322HtgdqJvwkyU9FeINsroEDuM3XhXmcRssCn3IDGylvdxFo
        KbIGeBw8yaHQ/mSNaIyvxuTqQt1VGtYYcPpQCmVOV4PmvytkqR7HHfAqSQFn
        +zFga0lTjpzDeJ2N9Narijj06eJgkB/UmFZ76dQ0Or6oF+dTY+wUsdxIXce1
        7soo10CI3Hp24R65Ve1Ck47a9hLwLOknx3NXY7gBSRC0buXhsCBqVqDJaUK6
        nJG4yVxBprWb0Gevitb85FI2tb16f6UkGJqJCazaZVLWUMOYxwnGQgLfYHbK
        MX/rVUCxY4fn1qMdzXjmZgtxwVPZBREVY+9wHqhUnMGuYVPaaxu7eKs3cL08
        34vFRunrKDKus6oRxR6SrFiNA8b5aMrmVRzBj6ciinYDZo/DfUoj6YDkntD4
        c1wedT6FhvSv3FqgrB7q4gf+FnVQNBOvM02vl0kaw8E9f2DIVqI/sOhYlOP7
        9K9dbXrsFO2Fw9qhyiGfRUEFb7+iO9pBulAHBlCW1bfbVZj2kzrfoHkHyQRR
        9tKF0tN5+QQj/BuhVr4X71Mc3lJnmfnLFZlgl2EE0pcAph5Imw1pEFg7w9nD
        OPvzN3urKKfep08Xb9AHLUOYG8SFdRz+AlRSRQcT/7QCzxt2speScVEamvbF
        uY+ao2ww7YFOlW+g5GAEo0V7f0f69T3dqVl4izZyXgrc0VX4JzUcOskdQo/V
        org4SrHoLvqf5lbCPElDR4xGCJVC1K1Z50Qs/JswSV2nnxsdPzYFr5QDE6oW
        jymctJCKXBvIvMmW3H5jp91o5W+jxO8htp56P3ADxYApoSIgSQzvL4m0anAk
        rBsKG6mVwfRB97AzAmFOVj5iN6B8FbMtNXciKA0EUY2lggLee1cZheP70xSY
        pheEs5mgVAXMuVDJYGWbrx76Uxr2uKRq0GPOUQE1N8xNCzpfQkNbY0/Kerms
        kJeVMwZy2qqs/JmfzkGONjQZuZ7w4ZYWLnLeLbkRJZpcK3DvK+OY67UUOFco
        l0xI6rhCid2hOeuNMRyX2V7pa0f2l3sBeq0w765se76UyTQk9UbJHbg8+pTb
        vmuNjIexL9KlmnK2iSHY5BfCO5SsOMDJAp0gfZr/8JQHajgO6ToF2XXzHdkW
        7Sj6R+iYZYRblgqOIIy8pb9akdXGmL1pU5DYAMnLbB/E2Dv1KtawnP6Qo4M4
        W64vynw8iaICDsg/UKJaQXdsyzCMfcaFyk5KVFw0r8hCrBLPILl3nz1mcbvf
        Bmth3ezq0t/yzj7AjY3tpVYv7P0YdGmbd1tx+cYVAGIVojtM73yZgeoT5GxC
        C9P58a4UOjwj4fDy7Zn3+vXr73LB+bnzhHJJGSE7xtZOonKepkk5WpF/60hS
        Ap103VGLUNGesNBJiiIQykXzJN2O9C4IhKYiTviyh8pypeUH7m9kB57Cu0ry
        vV812AMocvU6SX4I5yZ4mX7DzuzLVxl4gkS6LEm8CIUEmtCEJlM6nVagoc17
        P96amKpLPYCZIV4vJ+xKMZF03acBkeQtMhozaj6CuRMYQoN5jzNsqDsCmRMp
        3HfCDdMbJT6VtU32RBFPoVNGYo6PxiTupDfYsxQC+okEFUmUaUJaLa6EDQKz
        dbZOxciTiTeNQrIfqJzMeepPxWwdRehyjYOoEI3Aw8LFyNZS8DpU+rIaGTaK
        w9Cct8Em2Po20G9dlft4CxT2zI9hxVcimvW3dvNIJFWE8Q3KEvDzUoroRpg4
        E6KdhzJzY3RkHAjRy8tvOpvbS6C1dNyfqt5Oom+GVkFde2ypARIRjwLKyH+a
        6KByzV8J+Kd4zVRgozIW/ozWMBWnRknEin2NGL8UOgdrYZRzaMpRGUqFgVkm
        HNy29G/1svmq5gqpmoiYi2OakqBJBl1mREzBMFF/Gq58tQSVrn8gLDlYsIvC
        3Q6RLiwptA9zaR/nMkUbbw82rm3DBe7NYB6Ka9sQOsMhdjthVd/SxjugcPtW
        g1CuIn+ryqf0SwdRIAA+cnx1OMtjMPO0DSMlkp/jAJMVslB2zmrbEXtPCXLx
        LIzQ1LJzPlngD/XkrJ6gZdbpTpOU73pQCUNELZSDXJVyvNoWkZUjEmXB69tI
        JGrJRI07+8CBSmW+V7JtF5SEAqNB2zUG/Tddl2fiFuQGGd6I50g6qnd77L0l
        OSsVWKsDiZVNnZWvvdyTqvCgly1DN8ye3g72q4zDJRY1cfk5dINaR4hq0MLf
        Bu1xxz7FhoP1Z8CFjUGiP83WPspz63x01mCtRjLDyFcdiM0m8GS5gj1TAags
        1MP9xkXhpWOTegZYNVlnPIagmhfX6Vrsx/7uKuxN3JIoELjU6pak/lwN4eVk
        vEYYc9P5FYcqOylScWaH6SKf0soJ4dBnTYwqVIdbMunJjc2OCJsdVocGWu0O
        SvItdU8BaaL8yLFF4GpyihecE1CroTs5LV/4qXDzjz57x8OBlJdtUECFvSuf
        Jm5YUpRqn+YK4j3tngKz5+a5qM3cD+aiu+ns1OOOvIN8mZRrrRXuKxmnN//n
        2Z+iU4QGQttOQeRuCjPAanC5PYHXocaRnPdjq3swCVXTqwQ83YRio7X26SJc
        1Q5JPv0ckfDSReH0i0lysfF6IcL5InPuCyr5c5G23BgeCIFehbcicnl5vZKf
        9/Urh4w2NbXw9jwpHMn7dPnOsejoIBO4x16RiiNABnDHKe6mFqb/HV7yHEq+
        7z65OjpRRF3ycc9dpGEc+7hXwYJ8dEwqrw6+CQNT4Ko4ejekp3H64ryTPKLN
        Tp758QWZhD4gA3BJCp0NIomSz3ymDEk69+Pw31Rr09ifqE1r2xPJWi6pimrG
        uVf1Hi3iewS9tlwPGd63h7egmXVcCT6aH+mHO18PGjw2iyKPyLsCqznMMWHc
        SbLOiuS3g0N9IpMI5XEkrxqLuBjrf3hqbLc3t2qxKMKVLaMDAqUn1AyWQfRM
        5dqfxYSCi+vACaHlp4s33bUEmvTijZ43NDMyhTioztik8R0k5UOdGRkyyUSB
        TAPDbpR3IknL+jMocFifkBCaa5LiQCH5J8c6uzEgb+VyLdFNEUXJRnkyqUKd
        kqjyao2Y4Zhsct8CbK5PpRITqeyn8AFTeF6/Wohb8mIgcxt54RjuDHZNKS2Y
        HHE43PENscIgnKO39MXxdyO6fNom+Xr8cvwKx7x8e/bqu9d/IXBwYjiDOWCz
        2hsAg1YwEUbC/5bGffni1Tc2+Lq71UHFqa3sMsjem7VRs+ZRMiGVGsQ9pQAH
        wMPRp2Kk9q3MxHLkbci7gJ6S+dqnqjUqNximwxz5kNNBdeJpIDIK4MckbuW0
        tc2fQFkSbxnG4RLoEqu6ofxCbitrLFSAQXtfooK/ltq4LTGwKJQYxkNxeX40
        T1K4/ktPrqcLj3KSEQDEuQmfGuzwNy9fvbqXmiC02p3+YXb6F8C5i8weZbFr
        XQoE+n/ZO+0R7Skej2Qc9qDO6zBUE5OoXBNLPzAISRm73EdVFv6sUx2wJNJn
        e17+Qa+Y/wW4kWb8pyD/JVAOzBHnOrlTwYl6DqbNBPpDwcLdzL8NV+1lZs95
        cpEEXsxKLBs3M5Lk39BcOrcd6hBBxf98oC3oF8pE7gvJWbsJtM4Hpz0u2bv0
        +RSbjqioLsdgY9UFICnKzWU424hq4K5UGDizDtshdR+uAwPv/TgP7OnuzX1g
        T3rvDgRLlnzILgRV0zi6QnpANvyeNn4y3sfGFM+xeY22fLJE+5m9AbzoDcUl
        EIXCyg1JGijXJbMSTaLonQItg5RmykNayTNsvtJSLgIgH8vlOrMQwMoQRMvl
        GZzEIYj7yi5UYVN3Tdp9TjjQNj8iPeo5BmWdjEvPM9j6rrWMvVSsfFMdi25V
        y/jy8tO785F3/t/838s3p9fnJHyd/zf9iQXPpYqkKZ2V8lYziYU/EqsYnRJr
        dcZLavCLzLZlUbchMKJEN1xXoYwkncWL7ldAaOXEyEklLM6QGNVja9pQQqKZ
        tV7kBWJAW0MdsRihoZPfdEyXI5l1B5dKdEV3Jy3dkTh8YRPBIBEyfpoZxlqp
        fTHKA5F06L2G38S42/YVjI8bcWUnjHzIRkY+UM6COLGG4Pw/K7OzyKQd2Fam
        naUKGi67Hqztjbmie7Keam2QSvq6LpBpubGauITEsDY3dSiZ7ioxgqqnjrcD
        CRuVLKOF1yQjaYOdAYDUh85YfsVaB15EIy1jNBKznJDrW6kwlf+iAxa3/nKF
        MXCgVE2oMtiI+pLMsgSBhWqFURyZp5+SMcyG8jgm6LBBM7XSxP56ff3xBP/n
        ytPPxIy9UypIRK4LCjRS0UvOmJId92wPi7CdSc07XN6ETDfJ94NXr3ZErmn/
        HVLUOu0nLeLGFUDikmY6eMlKzYKWT6XZU6PK41YjjLTlO9AaRYy+Ag8FNVAw
        JAc1sLzSL6yh2vfRBjZwrGhn3nlF3eoiURodfdMkht1aWrG9uQdOf3IXQGZY
        TcwwRyTeiOo45hNcVWtMNb/OAHbMb5KD76D2gU23TYpT6scSNFsgud1HL8ST
        0BImaJyQCjHLqdftTodz5Epb0zjuzlLV+SKz0rgoKRBTpwnc47tEYgbyPpIQ
        7iSMkYrXUdROZ2j/brr2unt20fFPUpQOLR+buIoS4jufNxf3rt4uVeG8WtQP
        JTZV0I+YRhSpGoUVSchMwXqaYw6lwNEzeciplV5eiHnGGIEiCGObNpF04Ee1
        g5cLSuwOynIisf7ziSHKpUj80yzzp4tlTUy+9ZUGL4tYlbE4ttw9En9zjsM/
        1qTwK297rYdvh7T5k0nqsHIY2H/Y4Kx74dzOF+0kUza7u2JrWtQdUBtlBZR7
        arz64oEu41+/OR12v9rgz6L1r998TYY/2wagJTld/pirZQSBspHqER+RUNTD
        91faux32S2POU8d3ANsVprerG2R2/EAe/SaPQIeYVw2WZh51roKdttOSTaVW
        2ewJm620tLXj7jTYMbm46idt1xEfLRA3PuwjRCBPp+xKUhzNrHahkt2UwTvP
        6qdgl0I94kBM0SgYuAfRX2s6V2X1Qm9bXsfav6usdiT92T1QXedKEbY9UtLY
        pqRSthXNk3fsJqhDL4fUYPRgB6cv6sgdslsLEdEdkBY7jkxOoy4uuoX/O14u
        j4MAPZo6VJ2JGAh/x1giqWRLKcrUJRZbWnEnCFE6H3HlGWDlE8JhI7YrGe/Z
        LH82wfZvaIXgOSb02xXeZmh/DDlB1X5m1bdaIRLd4judoCNurcQ4VQseK811
        UCkOVJwuzBFX5KkHeVLCoR6QeOsIfGEsMG4Fs3coymsQLE9UFV7L1cSb6yNF
        Y4NO0TFRnCnnm1gPzliWASFAsMFcSDOdyZjmHDy0Ap3AjW/IpjWmZMdtNN86
        3sYDFegjG2aYOw/uuyqf0uSSlXqVqqat73268KjV1yuO1iBt3oc4Cvuyzpy5
        MK31KzUEiOlYtsUyYhb4komJ1zihk84BseZz0WD9/6OdjOOql2vTqB+7KtX7
        vXWh3pyxH7pwVDht+ZSFeRNSj6zkxd3vQhY69Hz1ommMok3oHl++cAD1kF6/
        KID3UF/AuJv3FEp2yiZPOG6TtL3O+QOEsBO23dN+64A8zUGiHkU3kpv2m+Nk
        S+8ZxcyqVlRbwcwyzn3GdmTa84YoiC7vOtzRGwh39vLB3bzRXWO0brnF9/rS
        FoPaLqC2VHBpeF2rYU2P/nWtQzodd1/kuyprXjffHRUL01T6buqEvVUijg6D
        KYl6lc8dhT6UhvpSPNqFlKMTgzXp07btybyLxIL8BBnS3E8D1uBx4hbEERX8
        jyINQet0UUiqOtWZZGvbNBeteiafA/Ockf9szRqEYeE5T4crJYJWHJOKuDWI
        7PrIfsTKZTXHyd86nqWJ++x7oGaAp1ahV5YQMexdvdO8V+jkXR8Yl4O7g9NS
        deFqzkt/7Xli52gxQtH3vX/bXdeGTvSEkqtQHe4LX0oNqq37cPU69qApTrCr
        +HfZq0kbflfwF9CwCGix1p56QTx3OmENE6pIpxUXzT1VP8YTUiqWaJZYCpyb
        mLGSvlWCdatN2EtwzA8LFJgT/UA3rZdLCO7G4hIaXkA75+1Diu0+ohZvWWJc
        w0y5N0DEueFHu+iHEpytbMbvexStvC4bjw4CST8ZxMgfOo+RrVc7q719uj5z
        it3we6MAYJ9tIxGiFh0JUU+3c1hIO/UtN1Sas4vmRfF+1a5IfT4gJ2yOA9aX
        0mkq4jCbSo2X1lV53cKaA4q3ZnahKassErxcv3Tdc6YgnRdvyDjuAI/Rf5GW
        CNOK+JnaO5oUa03QRqN7qUesrYo7FWTd0EHcDkdkvyZZ7a6uqNfqSvdZ/9rx
        Gt9Vsa/e1E6PS4ZOyYu6lwxoNddOjFTtSkGfKMl0honeM3EumDiacqmr7+yt
        DsSK6j4lJttfx+frnhcZx2z50QYrIWHtYWCIb4//oh95gA4qVx/EM5CAShn5
        bm5SfiKxiHWdHSH90C67awOjfQZNCWyaEF/ZuHBPlkUNXltEHayLfyDrYvHS
        Wpad4rW1PnS9uD3fEylXHFU4Tpu7Ikg6MOFyqlAHMCo5Qv0AMfv8hIAycYp6
        p478af6UGsdl2BFX9Ii2tQA+FSNwQuexaqNBWflUrSsXu09+1X9eBL+dQI+T
        X7FADPzD9Flk2eq9Dic5enP+7vz6vN5NhNNxkBbfavWUFZWdsdLezFtXNj3M
        QbF+bZ9mdla1RdgZnVZ8AVZsyj9YtUd4g9SXPPGNt6QXUKdn72jtBwPqSQG2
        fCc/pBxC9L+O3SwvhP/5Tz2GnMINlXZfPHP5/cnJZrMZz6mqk78K5XiaLE/Q
        V3piXsdRIxV1mkJZSgdSYoPDYeSP59d16HhJpHJAx8eFjmnJ1OBZotLpNLqE
        TkelaffA4FHXHmMM6UDu7UR+FTHUiP/FqKIWV6AG8z9+uKpFfSq4/7uhxH2w
        rIJVBbdAC6S6Xzx0IRNWP2hGJWqxNyK1IKGk8GLpOG1ALWEVPQlfdsY9NjQz
        tGDp316yJO0EbGdtU3KUrJeWo0RL+ca7gba7WGjBHnWesffD1tifc10d5POX
        L17oAVinJxVJYvk4rCMWC3wvEVR0ettIFb989a3Vp0011fwL1aZbo/H66OWR
        e9vIeu+o2VtVCTucJ+sjqqRh7qS2tkhpULCD7jW1AFEukg2LqW6ka1+WI9Hv
        JnksZQcUyGY5GEhxfWN/Q7XMJISoOkYYMweY6kc4og6oLPXjeEBjisnfa5p5
        0qnZts3qarlnVa2487Emk8ynzAnzdlBRL+dQe/t6YJsIIzq0QUArt2YE2Mib
        MFlzmRj9UBfbrvwv+ZOtuHJtT7BbEvHConucBbxTD8doz1OM/lMt9bGb726A
        qqdnA4ZhfpRUQKeDIYG6FCcFS2IZKYOw+BOf3+f4Qpeo1BtI70gLKpwj6Mkx
        oXyqKnFLl8n75uUL78cPP53b+amByCvS01NiOhZkGmEIKpbwlFmS4jlgO9Bw
        qZyi7+EjYwTDIk3i8N/sfMGJqERtvM3hA5DfwVgxe3G5PhHsWyowNdavDALN
        a1HYEAGOxVRErhVKH0SQaBQLDi8SmJHWKwxXl1friX2/kLcVpIYVvvPbLDZw
        k8PpYB9Pr8/+WidCfKJorlpRlAONVdaJXqNHEAIaL32My5WPVpL43etqj0+q
        VjkbjRekmDpyiBvyqVbE3nE/BswfMP9AmL/ZzRk2XTlDsUN7A8XPROApTkPV
        zQS2TgevjeCPFvMH7XHQHgftcdAeB+1x0B47iA1ngDCxiI4seqjGV5Wh8jo2
        HSQLPerXU0ufeHY0gZ2hreHt7tsu5HnXOLkpa/ZkKU7sxgUBZl8fN1d4UcRG
        pVWbyFp+Q/1xiTAHQPD7dCYXsMDlVe6NAu2cysP5dzOPnVmncI5793j9uA31
        KJqxr4eqdBoEFrqp2gG90A2feb+cT95q4X0/AVYXb8dyIRj7HQdn9G49MvmJ
        P/1i/6ZetIFeXAihkLOnnp9/dvnjD8/VMzBYfEfwY0zwJ4bVjVTAcyBuj7F+
        UMDdLgIl/On8IZU3j40nKD8tUdGkiFVOXwckSDBLYIqPPx1G1K2w43oev+sG
        fK3r47oDze7nwg1w+qG74H8LgqsF5z3o7aCZ99PMoeepo+hMFzUOK0vx/I7K
        Mypu3eg2ai+RqaWiqc4rveqAc6sg7nx+EdNK9U3AjSnUoMmbelwcxf4hrTTh
        CifmtYd/FieyymPI4qSm2goeKBWDcde2seeq9qGCKfwWp6pegb84QjDkjoFM
        cTOVwoMaoy5Z3BGEsWszBivPLitPgV4Z8lEy+xzW/gKr+SsVK9p7MTiUKnzk
        IEKDseigxiKQg6h1qmtSaCFKP/VoUCkPscd8TrL52aOOTJ7B1tsk+OyOlWbt
        NkrhbVfnfH/2qViEhGg5wtomq+sEoJQoEGojU4bFo2BjJYCDryN4BTbFGcae
        EQT0E54oIppKmlkyZ+Qm81YBTQYr2WGsZG0l2gelC7Y2bilReUfMRUFWdgdf
        9DZVtI292G2s+H1HYgzK770ov4c2ij8mhXlXZEmBDNSEmPSnA60iTH53Jsvh
        fg/3+77u9474mcL1dgfSuG/3QWNo7E1pH0wzWMYGy9hgGRssY4NlbLCMDZax
        wTI2WMbuwzL26GPB7tHS9sRzhZHlpaQqMWSEPbuldQCSGpZF9ZqY92LjDgn5
        2A/rToNQgTW7yy8tIJ1iBA50gBmgF+jtPhA0mUxDepvAPK5QHkU9iI5vT61j
        piz5rQZFtfBU1OPQ7A+geB5Y/2sblSi71d3ZLwwRqC1Q+qCAUsNJ30fYoexQ
        yaZ/2AvshE9kgMuK/oHPuI0p6EHxtgJKtY0oLL86VUWsPtxHl4NppBYt7HR9
        zHN3bJVr6XuTnbKe93G21d3Y36V/7SD3+jGiXVtnj+yWTNzfuzMwikeKUE+8
        gmbDSlqDYgPK8KoB71T/MTWrIJ36elL42p6RXEE3b6O9Tsa9ADpJmqzn+kWZ
        ovZ6N4ruA+DspYMjR1/9sTXLlNTZLVDyuL0FSFUFGIhCIGZhTLXhZbFCfv6O
        oLSlgYYrwTA99CMRxUc3O6eZqS3pVkWVO538Sv89RJZZ8Znrx0HFzXmqXegF
        FT24d3iQJCz1pyQzr4S5XZ6drP8wItpw8yGVjTFbKP9GmD+cyOf51XzzlZMp
        Mc/71KTV/epQELbl5WqZv9fmZrEB/4KdVef4gvXe6KJ8AtoB5mu/NzsI6JVs
        5YrRTuAknftx+G+RjrwpqnIqEAWfWY8DgXZ3XIuqjg4NIjUKoJMpA64eHvW9
        uYjR1ojujziJjzdJ+gWZOQOhI010MYDnY/1irHHfqFgT+CsIAVvWaJlXb7Cz
        3Z5cMhNh3hBnq740Nchjfvk0DiJ2n/gTSU+ysw2TIfeDIEUfbmFr0FoPU8Oo
        q8ifHtzFNhDR9iAt/dtTjX1OuHaGjFDgQyVsxKC07SKuPNrE/id05eA7NPxc
        uc+NcheWY9BRXncfbjvo2+HKjwlfrLL69xQ6Un3RqsOp9n7VKls0Pcn51bhO
        k7BZeHf3Acma2rDHr8jvYnLFx+Zb8rlSp/Z62sWSrUuGy5W9TCrwkNhRELBf
        6obdxqutpsS3ocTHP9QT49h0MCs41Vgnit4nTjsRc4fFWSNmp3LkSqXawwT9
        2DWagfOpfejN+e5ZASOJ2VLAYrH52krY46csmR9PbfyvJy6qZU8F76Q6QmdV
        zwxhnjkzNyUV03WaGh43KIODMli9rQ+L/+yjDF4W0X1gjg+POd5BJgaHtvdK
        xKCkCiblHfIw8j73tWtJGs5DmOeq+KhbF42aKCuPol51Iz3ZvLTKPKQ2IL0b
        vH/wWH+Fks8onhHDldeSy5hKDx+phH2OIhF8Pnpe3u4z/a3I1EtsXNU8BeWV
        +Veh5Cm9y3zOzQxvOCzvqLws3OFsP61WeKcwu7Dw3iF59ZXu9FTaGAr7Owsj
        DOSeNOX8IZ+1m1pDuG9n/lxh98WH/RD7XbLJF2+9slhaPEr7ey1dD3DwhQ8G
        vbYqysPyHhsgWhZ8aK6Nprhfl9e5Gu0qbaqjMUFLytJOW3vdoNkMms3X1mxC
        GPrTxZteUF0pjFc3Ad80V7sZGoDVU+iAmgWZoJbUdhbcB9VnUH2+guoDXPqH
        7R5KT8CbZYJTrA1rm34Li1/HBtFGKFsiLaaxm5PPSQq9LghbOrhWCxUdsspJ
        ZEFiTIhPAi6OdEIS0jNfTgHrYUeeK38YknlE/5x7bBbAYGinkVmwsmDUFeIs
        6qqo3MmyOnENNO+5vRQDEaXRUqK4slF7FaB+v4njyrt4fktkJ/jIebn9kFYP
        Ymf3YrJrlvohJo8acudL3WSL0aT/l6722HuP4atCnbx2e+ZjKdTIj3gZzhcq
        M3glKA1vCTsTriIWvO2UULuKANVmoSy+eYhSSw6iLPJLHrSRX9bs6i+99u9t
        KgBycYtJyH4KMMIil5IVpDhwrAEwHqvhUCsgCJhZS3IbiGO3U7Hih19F9VT2
        MD0AFwseHrIwXI8TVx61OefZZJ2xFr+gdFaRRlsOQC80fN5k97Hy6UmItwk3
        Ck2TBIBX1qCLtu2R3CsRSvGKwkLKG9RuGfK5euunIoAdturFRXwTZgfywGqU
        ULURwnzouy3hYZ3K3msQtys86Qr2wTVMrHPFNqr+BF1kdfAgWB4nMyNzUnGH
        JqQeeS2xAb8vpYhuhpoid/w0E2/3V32Z6doocRI1DD8qV+tQC+lYs4PQWxUJ
        seqCaHOhVTcEYCAoJEHxvfc5PvaUYk5/K3WD/q6R6ujbL/S/bk5On5SdOP/b
        v6W/leyPn4YyI33KjAxuCLP4wQ3RlaZ/RTeEWUFOAfY+vdKJ1evgcM8v3555
        r1+//o4l9cxfrp6XTvbnhdGUycpRLg6lOQbuB45b9/JiKuZ+GkRo+E0KkmYX
        5HGv5RCo1Mcf9Mdy/yyTm91pg9Sob9hboXP7KNv30C2PsSUvDCDOQuTJniOP
        rFi6Yqh1OYz35f5Dc01gHqX65lWNNiQNGcOkh4Ix/BekOrLcHcjvAPBlYawb
        HXRBGVqHs/oFMaefoMn+hiS4zkuqoaEPMGXovsN+CcMLhu0Ckj+cDEwnInYl
        qF+3yooieV1KrLTN5Wz9wIGV57JnkZXBGT44w7+2M/wBEvDBw6324bFkvrCM
        weoUaPHj+dhsy1NpthbNKWEWaY6JhCWbjp8/IAZZ4YWPK10GLtz0y2lg3eUa
        9mkaduOglW79s/I8fn0Cn5IAbXZJfivyFBLFebQ5e1854+yA2Wa5mQeOpZ+J
        Z6HOlH+foByQEwvWRmgBQBj3U0b2uvu0vgcmBO+q+aaucaeCb63F4Hbv+wxZ
        bIN4O4i3g3g7iLeDeHtPXHHHs1iKKbofxGrmiQd9GOtch7a2fBJr4JIDl/za
        XHLIiPhjM9QhI2LIiOAfh4yILhgwZEQMGREd9m/IiBgyIoaMiCEjYsiIKK1h
        yIjoRFqHjIghI2LIiBgyIoaMiCEjYsiIGDIivJaPkg2vPZfzLJ549jtOM9DP
        J2tp9N3qS058XLU+KD3AmNuVvVD4+Qccv7urSdffwiFOcArAacYyxD9+ig+F
        G8Dq/EXAoxZI8VbBdKmadDj5vKtq85BQwHW+sEH4zkDfx9N0d+dDQkC1U3my
        FCe61cmv6q99Hg/SKg6O7qnxdjkUVbPeZukw0FzEOWsvT1NrwqaBr1C1ejS8
        KnR5SNinHNfNRfwMVjnL+FXQag9kApZon6g03l9cC3oUp2Q3wza7cOwOHEaK
        o/fyGL1E74+S1Du4jPI+9+UyegQOg8E0oU0Tn+NBDe6jBncQIa40VXtIxLu1
        9NguMMkQeHdoUlVwOGg4kt7h9gFJA20faPtA2wfa3o62D9aGHtaGJ/D/vz35
        /247tZ9obgEA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:43:39 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.10.2
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQERDfE0mOlCoCkIMpNVHdriG-c1WQH_VS2hZFBbJQRiyP4buBqZPNe4i-cGvGzpjLsJc_jxsmaurQ
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 19:43:40 GMT
      Date:
      - Thu, 05 Feb 2015 19:43:40 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 19:43:40 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjk2NzUsImlhdCI6MTQyMzE2OTU1NX0.czPrkKppBfo8OvjU9Pd3wi4YpTcAhlXFXTjhvwNoWooUKP_bynwMDw3rsoUOixAUSW1BoDQtL3QtIkxPRT0e6fct63S6bBbP6Knvfcp8RMduHiKJTNf4rk4eBR1N1h01zYRqgg3PI5z-3mCu23yTV__2U6C3TUw-hzY2J8tHhG8
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:53:37 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQEWHHNjNsW5PHFt29VEc5uAJKY05vzDdqd1uQItg2DTdRPP6T-94dzSaLcQjkKPHhDqAlerCDycqQ",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:53:36 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:57:55 GMT
      Date:
      - Thu, 05 Feb 2015 20:52:55 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '43'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:53:37 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQEWHHNjNsW5PHFt29VEc5uAJKY05vzDdqd1uQItg2DTdRPP6T-94dzSaLcQjkKPHhDqAlerCDycqQ
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:53:39 GMT
      Date:
      - Thu, 05 Feb 2015 20:53:39 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:53:37 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjk3MTIsImlhdCI6MTQyMzE2OTU5Mn0.O2vE9gVu-FY9C_OY-YRCw58zLzsvlBQn5AwgyTwXJeSTrY9gRNqvnXYHrX5Jwyv-AepGlxWQ_51D7MZn-crE2w9tiHDTyiOgDjDHsz2Lb4bWDBK_1F5rXzlNB7MgZH5tsIZ_o4C0G6NFd4uubmu9tOWPp3564jFi76Vsv8e5Ubw
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:54:14 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQHE1d9f_8nB8_FrvkqWbgqyGLbcP_Q3OJC7_IQ91jbQaD5xiGWCcZ_0Vn6kij1HPcbMep3CILujtQ",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:13 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:57:55 GMT
      Date:
      - Thu, 05 Feb 2015 20:52:55 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '80'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:13 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQHE1d9f_8nB8_FrvkqWbgqyGLbcP_Q3OJC7_IQ91jbQaD5xiGWCcZ_0Vn6kij1HPcbMep3CILujtQ
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:54:15 GMT
      Date:
      - Thu, 05 Feb 2015 20:54:15 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:14 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjk3NDIsImlhdCI6MTQyMzE2OTYyMn0.SEl0TYHIgpnsCHXm53qE5mK-GTuAWASMQAW5wB5uD46Z1qX5-YFDWbcnckOBQ0jq-3rcCEm5RQ7APgTZ54Zej058QRscWBIm5T2FhctXL3jpohuHfkKfTnG8FNfn0bBz3Pe78zEltNYl1snoon7prV-N1b9UmudyzBrHLnDyYcQ
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:54:44 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQEKQean8MkOdSkU1PK5WraNVQP07HJZmcIADbrz2ScJD6Znpl2Zixzvwv9qPu39qE-Xyn5JMUAAGA",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:42 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:57:55 GMT
      Date:
      - Thu, 05 Feb 2015 20:52:55 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '109'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:42 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQEKQean8MkOdSkU1PK5WraNVQP07HJZmcIADbrz2ScJD6Znpl2Zixzvwv9qPu39qE-Xyn5JMUAAGA
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:54:45 GMT
      Date:
      - Thu, 05 Feb 2015 20:54:45 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:43 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjk3NTcsImlhdCI6MTQyMzE2OTYzN30.Pc5l9-y6qQpwxpIkN1iyIep632VQxtnusR9DQf1XXf8U89VP4m3xrq0Bok-JhKgnuhiwIchGNokkIB6vPHhOCruEJoZoswQN0Y-37MKmf1CegOKoaCGGDivnore5XsJ8VWbPvEeBqJVKK5rw_eWOX-uu25gucc8wakkf8lYuTmc
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:54:59 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQGWs_IsUt0SHpNE36G5Q3jg0wv8krywzaFzPmlMSVFHOf78gYTIL2bNGpbb2GL7iCL1RWrZoCc4KQ",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:58 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:57:55 GMT
      Date:
      - Thu, 05 Feb 2015 20:52:55 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '124'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:58 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQGWs_IsUt0SHpNE36G5Q3jg0wv8krywzaFzPmlMSVFHOf78gYTIL2bNGpbb2GL7iCL1RWrZoCc4KQ
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:55:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:55:00 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:54:59 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIzNDEyNDQ4NTg1NjktbWs3bDNpZWhzMnZqYmdqNXRjdmYyajNnYWhnbmMycHJAZGV2ZWxvcGVyLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJzY29wZSI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2FsZW5kYXIucmVhZG9ubHkiLCJhdWQiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLCJleHAiOjE0MjMxNjk3NjksImlhdCI6MTQyMzE2OTY0OX0.RKt3-kCgbByBCGrOxsBVrCy1-mstTa6pCRh4_Lb-dsrZ2KhFMabOug4rZXBaa2uzmumdOo4RqCz92gshN4TvnWdHqe-fK7JBkdu3iOkvZyobhVAH4GSFCt0qTWfkTd6PxJs7UtfH3sXJxSejU09ZnWxBCpXTO4dJyfazFnQi1PI
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Thu, 05 Feb 2015 20:55:11 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "access_token" : "ya29.EQGmqw8_DpIRfeTfZ_kO3kWKwHkq_ZYHH0gLqoN3dKgrIT0QZjFWJrpJXNy9MdluIX8e3FVTpflajw",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:55:10 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:57:55 GMT
      Date:
      - Thu, 05 Feb 2015 20:52:55 GMT
      Etag:
      - '"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '93800'
      Server:
      - GSE
      Age:
      - '136'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=0.02
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"ye6orv2F-1npMW3u9suM3a7C5Bo/OJfjBJ7SEMZFwh2sfCfJ4xHG4Zo\"",
         "discoveryVersion": "v1",
         "id": "calendar:v3",
         "name": "calendar",
         "version": "v3",
         "revision": "20150115",
         "title": "Calendar API",
         "description": "Lets you manipulate events and other calendar data.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "http://www.google.com/images/icons/product/calendar-16.png",
          "x32": "http://www.google.com/images/icons/product/calendar-32.png"
         },
         "documentationLink": "https://developers.google.com/google-apps/calendar/firstapp",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/calendar/v3/",
         "basePath": "/calendar/v3/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "calendar/v3/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/calendar": {
             "description": "Manage your calendars"
            },
            "https://www.googleapis.com/auth/calendar.readonly": {
             "description": "View your calendars"
            }
           }
          }
         },
         "schemas": {
          "Acl": {
           "id": "Acl",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of rules on the access control list.",
             "items": {
              "$ref": "AclRule"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#acl\").",
             "default": "calendar#acl"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "AclRule": {
           "id": "AclRule",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the ACL rule."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#aclRule\").",
             "default": "calendar#aclRule"
            },
            "role": {
             "type": "string",
             "description": "The role assigned to the scope. Possible values are:  \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.",
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            },
            "scope": {
             "type": "object",
             "description": "The scope of the rule.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The type of the scope. Possible values are:  \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not.",
               "annotations": {
                "required": [
                 "calendar.acl.insert"
                ]
               }
              },
              "value": {
               "type": "string",
               "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
              }
             },
             "annotations": {
              "required": [
               "calendar.acl.insert"
              ]
             }
            }
           }
          },
          "Calendar": {
           "id": "Calendar",
           "type": "object",
           "properties": {
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendar\").",
             "default": "calendar#calendar"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendars.insert"
              ]
             }
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) Optional."
            }
           }
          },
          "CalendarList": {
           "id": "CalendarList",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "Calendars that are present on the user's calendar list.",
             "items": {
              "$ref": "CalendarListEntry"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#calendarList\").",
             "default": "calendar#calendarList"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "CalendarListEntry": {
           "id": "CalendarListEntry",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "backgroundColor": {
             "type": "string",
             "description": "The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property. Optional."
            },
            "colorId": {
             "type": "string",
             "description": "The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). Optional."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders that the authenticated user has for this calendar.",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Optional. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "foregroundColor": {
             "type": "string",
             "description": "The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property. Optional."
            },
            "hidden": {
             "type": "boolean",
             "description": "Whether the calendar has been hidden from the list. Optional. The default is False.",
             "default": "false"
            },
            "id": {
             "type": "string",
             "description": "Identifier of the calendar.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#calendarListEntry\").",
             "default": "calendar#calendarListEntry"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
            },
            "notificationSettings": {
             "type": "object",
             "description": "The notifications that the authenticated user is receiving for this calendar.",
             "properties": {
              "notifications": {
               "type": "array",
               "description": "The list of notifications set for this calendar.",
               "items": {
                "$ref": "CalendarNotification"
               }
              }
             }
            },
            "primary": {
             "type": "boolean",
             "description": "Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.",
             "default": "false"
            },
            "selected": {
             "type": "boolean",
             "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is False.",
             "default": "false"
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "summaryOverride": {
             "type": "string",
             "description": "The summary that the authenticated user has set for this calendar. Optional."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Optional. Read-only."
            }
           }
          },
          "CalendarNotification": {
           "id": "CalendarNotification",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used to deliver the notification. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            },
            "type": {
             "type": "string",
             "description": "The type of notification. Possible values are:  \n- \"eventCreation\" - Notification sent when a new event is put on the calendar. \n- \"eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\" - Notification sent when an event is cancelled. \n- \"eventResponse\" - Notification sent when an event is changed. \n- \"agenda\" - An agenda with the events of the day (sent out in the morning).",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update"
              ]
             }
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ColorDefinition": {
           "id": "ColorDefinition",
           "type": "object",
           "properties": {
            "background": {
             "type": "string",
             "description": "The background color associated with this color definition."
            },
            "foreground": {
             "type": "string",
             "description": "The foreground color that can be used to write on top of a background with 'background' color."
            }
           }
          },
          "Colors": {
           "id": "Colors",
           "type": "object",
           "properties": {
            "calendar": {
             "type": "object",
             "description": "Palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "A calendar color defintion."
             }
            },
            "event": {
             "type": "object",
             "description": "Palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.",
             "additionalProperties": {
              "$ref": "ColorDefinition",
              "description": "An event color definition."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#colors\").",
             "default": "calendar#colors"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "Error": {
           "id": "Error",
           "type": "object",
           "properties": {
            "domain": {
             "type": "string",
             "description": "Domain, or broad category, of the error."
            },
            "reason": {
             "type": "string",
             "description": "Specific reason for the error. Some of the possible values are:  \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error.  Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
            }
           }
          },
          "Event": {
           "id": "Event",
           "type": "object",
           "properties": {
            "anyoneCanAddSelf": {
             "type": "boolean",
             "description": "Whether anyone can invite themselves to the event. Optional. The default is False.",
             "default": "false"
            },
            "attendees": {
             "type": "array",
             "description": "The attendees of the event.",
             "items": {
              "$ref": "EventAttendee"
             }
            },
            "attendeesOmitted": {
             "type": "boolean",
             "description": "Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.",
             "default": "false"
            },
            "colorId": {
             "type": "string",
             "description": "The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional."
            },
            "created": {
             "type": "string",
             "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "creator": {
             "type": "object",
             "description": "The creator of the event. Read-only.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The creator's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The creator's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The creator's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the event. Optional."
            },
            "end": {
             "$ref": "EventDateTime",
             "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "endTimeUnspecified": {
             "type": "boolean",
             "description": "Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.",
             "default": "false"
            },
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "extendedProperties": {
             "type": "object",
             "description": "Extended properties of the event.",
             "properties": {
              "private": {
               "type": "object",
               "description": "Properties that are private to the copy of the event that appears on this calendar.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the private property and the corresponding value."
               }
              },
              "shared": {
               "type": "object",
               "description": "Properties that are shared between copies of the event on other attendees' calendars.",
               "additionalProperties": {
                "type": "string",
                "description": "The name of the shared property and the corresponding value."
               }
              }
             }
            },
            "gadget": {
             "type": "object",
             "description": "A gadget that extends this event.",
             "properties": {
              "display": {
               "type": "string",
               "description": "The gadget's display mode. Optional. Possible values are:  \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
              },
              "height": {
               "type": "integer",
               "description": "The gadget's height in pixels. Optional.",
               "format": "int32"
              },
              "iconLink": {
               "type": "string",
               "description": "The gadget's icon URL."
              },
              "link": {
               "type": "string",
               "description": "The gadget's URL."
              },
              "preferences": {
               "type": "object",
               "description": "Preferences.",
               "additionalProperties": {
                "type": "string",
                "description": "The preference name and corresponding value."
               }
              },
              "title": {
               "type": "string",
               "description": "The gadget's title."
              },
              "type": {
               "type": "string",
               "description": "The gadget's type."
              },
              "width": {
               "type": "integer",
               "description": "The gadget's width in pixels. Optional.",
               "format": "int32"
              }
             }
            },
            "guestsCanInviteOthers": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is True.",
             "default": "true"
            },
            "guestsCanModify": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False.",
             "default": "false"
            },
            "guestsCanSeeOtherGuests": {
             "type": "boolean",
             "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.",
             "default": "true"
            },
            "hangoutLink": {
             "type": "string",
             "description": "An absolute link to the Google+ hangout associated with this event. Read-only."
            },
            "htmlLink": {
             "type": "string",
             "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
            },
            "iCalUID": {
             "type": "string",
             "description": "Event ID in the iCalendar format.",
             "annotations": {
              "required": [
               "calendar.events.import"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "Identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  \n- characters allowed in the ID are those used in base32hex encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2 in RFC2938 \n- the length of the ID must be between 5 and 1024 characters \n- the ID must be unique per calendar  Due to the globally distributed nature of the system, we cannot guarantee that ID collisions will be detected at event creation time. To minimize the risk of collisions we recommend using an established UUID algorithm such as one described in RFC4122."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#event\").",
             "default": "calendar#event"
            },
            "location": {
             "type": "string",
             "description": "Geographic location of the event as free-form text. Optional."
            },
            "locked": {
             "type": "boolean",
             "description": "Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.",
             "default": "false"
            },
            "organizer": {
             "type": "object",
             "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
             "properties": {
              "displayName": {
               "type": "string",
               "description": "The organizer's name, if available."
              },
              "email": {
               "type": "string",
               "description": "The organizer's email address, if available."
              },
              "id": {
               "type": "string",
               "description": "The organizer's Profile ID, if available."
              },
              "self": {
               "type": "boolean",
               "description": "Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.",
               "default": "false"
              }
             }
            },
            "originalStartTime": {
             "$ref": "EventDateTime",
             "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
            },
            "privateCopy": {
             "type": "boolean",
             "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.",
             "default": "false"
            },
            "recurrence": {
             "type": "array",
             "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events.",
             "items": {
              "type": "string"
             }
            },
            "recurringEventId": {
             "type": "string",
             "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
            },
            "reminders": {
             "type": "object",
             "description": "Information about the event's reminders for the authenticated user.",
             "properties": {
              "overrides": {
               "type": "array",
               "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event.",
               "items": {
                "$ref": "EventReminder"
               }
              },
              "useDefault": {
               "type": "boolean",
               "description": "Whether the default reminders of the calendar apply to the event."
              }
             }
            },
            "sequence": {
             "type": "integer",
             "description": "Sequence number as per iCalendar.",
             "format": "int32"
            },
            "source": {
             "type": "object",
             "description": "Source of an event from which it was created; for example a web page, an email message or any document identifiable by an URL using HTTP/HTTPS protocol. Accessible only by the creator of the event.",
             "properties": {
              "title": {
               "type": "string",
               "description": "Title of the source; for example a title of a web page or an email subject."
              },
              "url": {
               "type": "string",
               "description": "URL of the source pointing to a resource. URL's protocol must be HTTP or HTTPS."
              }
             }
            },
            "start": {
             "$ref": "EventDateTime",
             "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "status": {
             "type": "string",
             "description": "Status of the event. Optional. Possible values are:  \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
            },
            "summary": {
             "type": "string",
             "description": "Title of the event."
            },
            "transparency": {
             "type": "string",
             "description": "Whether the event blocks time on the calendar. Optional. Possible values are:  \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar.",
             "default": "opaque"
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            },
            "visibility": {
             "type": "string",
             "description": "Visibility of the event. Optional. Possible values are:  \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons.",
             "default": "default"
            }
           }
          },
          "EventAttachment": {
           "id": "EventAttachment",
           "type": "object"
          },
          "EventAttendee": {
           "id": "EventAttendee",
           "type": "object",
           "properties": {
            "additionalGuests": {
             "type": "integer",
             "description": "Number of additional guests. Optional. The default is 0.",
             "default": "0",
             "format": "int32"
            },
            "comment": {
             "type": "string",
             "description": "The attendee's response comment. Optional."
            },
            "displayName": {
             "type": "string",
             "description": "The attendee's name, if available. Optional."
            },
            "email": {
             "type": "string",
             "description": "The attendee's email address, if available. This field must be present when adding an attendee.",
             "annotations": {
              "required": [
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "id": {
             "type": "string",
             "description": "The attendee's Profile ID, if available."
            },
            "optional": {
             "type": "boolean",
             "description": "Whether this is an optional attendee. Optional. The default is False.",
             "default": "false"
            },
            "organizer": {
             "type": "boolean",
             "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
            },
            "resource": {
             "type": "boolean",
             "description": "Whether the attendee is a resource. Read-only. The default is False.",
             "default": "false"
            },
            "responseStatus": {
             "type": "string",
             "description": "The attendee's response status. Possible values are:  \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
            },
            "self": {
             "type": "boolean",
             "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.",
             "default": "false"
            }
           }
          },
          "EventDateTime": {
           "id": "EventDateTime",
           "type": "object",
           "properties": {
            "date": {
             "type": "string",
             "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
             "format": "date"
            },
            "dateTime": {
             "type": "string",
             "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
            }
           }
          },
          "EventReminder": {
           "id": "EventReminder",
           "type": "object",
           "properties": {
            "method": {
             "type": "string",
             "description": "The method used by this reminder. Possible values are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup.",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            },
            "minutes": {
             "type": "integer",
             "description": "Number of minutes before the start of the event when the reminder should trigger.",
             "format": "int32",
             "annotations": {
              "required": [
               "calendar.calendarList.insert",
               "calendar.calendarList.update",
               "calendar.events.import",
               "calendar.events.insert",
               "calendar.events.update"
              ]
             }
            }
           }
          },
          "Events": {
           "id": "Events",
           "type": "object",
           "properties": {
            "accessRole": {
             "type": "string",
             "description": "The user's access role for this calendar. Read-only. Possible values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
            },
            "defaultReminders": {
             "type": "array",
             "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).",
             "items": {
              "$ref": "EventReminder"
             }
            },
            "description": {
             "type": "string",
             "description": "Description of the calendar. Read-only."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of events on the calendar.",
             "items": {
              "$ref": "Event"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#events\").",
             "default": "calendar#events"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            },
            "summary": {
             "type": "string",
             "description": "Title of the calendar. Read-only."
            },
            "timeZone": {
             "type": "string",
             "description": "The time zone of the calendar. Read-only."
            },
            "updated": {
             "type": "string",
             "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
             "format": "date-time"
            }
           }
          },
          "FreeBusyCalendar": {
           "id": "FreeBusyCalendar",
           "type": "object",
           "properties": {
            "busy": {
             "type": "array",
             "description": "List of time ranges during which this calendar should be regarded as busy.",
             "items": {
              "$ref": "TimePeriod"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the calendar failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyGroup": {
           "id": "FreeBusyGroup",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "array",
             "description": "List of calendars' identifiers within a group.",
             "items": {
              "type": "string"
             }
            },
            "errors": {
             "type": "array",
             "description": "Optional error(s) (if computation for the group failed).",
             "items": {
              "$ref": "Error"
             }
            }
           }
          },
          "FreeBusyRequest": {
           "id": "FreeBusyRequest",
           "type": "object",
           "properties": {
            "calendarExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
             "format": "int32"
            },
            "groupExpansionMax": {
             "type": "integer",
             "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
             "format": "int32"
            },
            "items": {
             "type": "array",
             "description": "List of calendars and/or groups to query.",
             "items": {
              "$ref": "FreeBusyRequestItem"
             }
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval for the query.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval for the query.",
             "format": "date-time"
            },
            "timeZone": {
             "type": "string",
             "description": "Time zone used in the response. Optional. The default is UTC.",
             "default": "UTC"
            }
           }
          },
          "FreeBusyRequestItem": {
           "id": "FreeBusyRequestItem",
           "type": "object",
           "properties": {
            "id": {
             "type": "string",
             "description": "The identifier of a calendar or a group."
            }
           }
          },
          "FreeBusyResponse": {
           "id": "FreeBusyResponse",
           "type": "object",
           "properties": {
            "calendars": {
             "type": "object",
             "description": "List of free/busy information for calendars.",
             "additionalProperties": {
              "$ref": "FreeBusyCalendar",
              "description": "Free/busy expansions for a single calendar."
             }
            },
            "groups": {
             "type": "object",
             "description": "Expansion of groups.",
             "additionalProperties": {
              "$ref": "FreeBusyGroup",
              "description": "List of calendars that are members of this group."
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#freeBusy\").",
             "default": "calendar#freeBusy"
            },
            "timeMax": {
             "type": "string",
             "description": "The end of the interval.",
             "format": "date-time"
            },
            "timeMin": {
             "type": "string",
             "description": "The start of the interval.",
             "format": "date-time"
            }
           }
          },
          "Setting": {
           "id": "Setting",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the resource."
            },
            "id": {
             "type": "string",
             "description": "The id of the user setting."
            },
            "kind": {
             "type": "string",
             "description": "Type of the resource (\"calendar#setting\").",
             "default": "calendar#setting"
            },
            "value": {
             "type": "string",
             "description": "Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters."
            }
           }
          },
          "Settings": {
           "id": "Settings",
           "type": "object",
           "properties": {
            "etag": {
             "type": "string",
             "description": "Etag of the collection."
            },
            "items": {
             "type": "array",
             "description": "List of user settings.",
             "items": {
              "$ref": "Setting"
             }
            },
            "kind": {
             "type": "string",
             "description": "Type of the collection (\"calendar#settings\").",
             "default": "calendar#settings"
            },
            "nextPageToken": {
             "type": "string",
             "description": "Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided."
            },
            "nextSyncToken": {
             "type": "string",
             "description": "Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided."
            }
           }
          },
          "TimePeriod": {
           "id": "TimePeriod",
           "type": "object",
           "properties": {
            "end": {
             "type": "string",
             "description": "The (exclusive) end of the time period.",
             "format": "date-time"
            },
            "start": {
             "type": "string",
             "description": "The (inclusive) start of the time period.",
             "format": "date-time"
            }
           }
          }
         },
         "resources": {
          "acl": {
           "methods": {
            "delete": {
             "id": "calendar.acl.delete",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "DELETE",
             "description": "Deletes an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.acl.get",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "GET",
             "description": "Returns an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.acl.insert",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "POST",
             "description": "Creates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.acl.list",
             "path": "calendars/{calendarId}/acl",
             "httpMethod": "GET",
             "description": "Returns the rules in the access control list for the calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Acl"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.acl.patch",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PATCH",
             "description": "Updates an access control rule. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.acl.update",
             "path": "calendars/{calendarId}/acl/{ruleId}",
             "httpMethod": "PUT",
             "description": "Updates an access control rule.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "ruleId": {
               "type": "string",
               "description": "ACL rule identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId",
              "ruleId"
             ],
             "request": {
              "$ref": "AclRule"
             },
             "response": {
              "$ref": "AclRule"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.acl.watch",
             "path": "calendars/{calendarId}/acl/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to ACL resources.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \"none\". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendarList": {
           "methods": {
            "delete": {
             "id": "calendar.calendarList.delete",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendarList.get",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendarList.insert",
             "path": "users/me/calendarList",
             "httpMethod": "POST",
             "description": "Adds an entry to the user's calendar list.",
             "parameters": {
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "list": {
             "id": "calendar.calendarList.list",
             "path": "users/me/calendarList",
             "httpMethod": "GET",
             "description": "Returns entries on the user's calendar list.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "CalendarList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "patch": {
             "id": "calendar.calendarList.patch",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendarList.update",
             "path": "users/me/calendarList/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates an entry on the user's calendar list.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "colorRgbFormat": {
               "type": "boolean",
               "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "CalendarListEntry"
             },
             "response": {
              "$ref": "CalendarListEntry"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.calendarList.watch",
             "path": "users/me/calendarList/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to CalendarList resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "minAccessRole": {
               "type": "string",
               "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
               "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
               ],
               "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted calendar list entries in the result. Optional. The default is False.",
               "location": "query"
              },
              "showHidden": {
               "type": "boolean",
               "description": "Whether to show hidden entries. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "calendars": {
           "methods": {
            "clear": {
             "id": "calendar.calendars.clear",
             "path": "calendars/{calendarId}/clear",
             "httpMethod": "POST",
             "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "delete": {
             "id": "calendar.calendars.delete",
             "path": "calendars/{calendarId}",
             "httpMethod": "DELETE",
             "description": "Deletes a secondary calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.calendars.get",
             "path": "calendars/{calendarId}",
             "httpMethod": "GET",
             "description": "Returns metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "insert": {
             "id": "calendar.calendars.insert",
             "path": "calendars",
             "httpMethod": "POST",
             "description": "Creates a secondary calendar.",
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.calendars.patch",
             "path": "calendars/{calendarId}",
             "httpMethod": "PATCH",
             "description": "Updates metadata for a calendar. This method supports patch semantics.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.calendars.update",
             "path": "calendars/{calendarId}",
             "httpMethod": "PUT",
             "description": "Updates metadata for a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Calendar"
             },
             "response": {
              "$ref": "Calendar"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "calendar.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "colors": {
           "methods": {
            "get": {
             "id": "calendar.colors.get",
             "path": "colors",
             "httpMethod": "GET",
             "description": "Returns the color definitions for calendars and events.",
             "response": {
              "$ref": "Colors"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "events": {
           "methods": {
            "delete": {
             "id": "calendar.events.delete",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "DELETE",
             "description": "Deletes an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the deletion of the event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "get": {
             "id": "calendar.events.get",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "GET",
             "description": "Returns an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "import": {
             "id": "calendar.events.import",
             "path": "calendars/{calendarId}/events/import",
             "httpMethod": "POST",
             "description": "Imports an event. This operation is used to add a private copy of an existing event to a calendar.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "insert": {
             "id": "calendar.events.insert",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "POST",
             "description": "Creates an event.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the new event. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "instances": {
             "id": "calendar.events.instances",
             "path": "calendars/{calendarId}/events/{eventId}/instances",
             "httpMethod": "GET",
             "description": "Returns instances of the specified recurring event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Recurring event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "originalStart": {
               "type": "string",
               "description": "The original start time of the instance in the result. Optional.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "list": {
             "id": "calendar.events.list",
             "path": "calendars/{calendarId}/events",
             "httpMethod": "GET",
             "description": "Returns events on the specified calendar.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "response": {
              "$ref": "Events"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "move": {
             "id": "calendar.events.move",
             "path": "calendars/{calendarId}/events/{eventId}/move",
             "httpMethod": "POST",
             "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier of the source calendar where the event currently is on.",
               "required": true,
               "location": "path"
              },
              "destination": {
               "type": "string",
               "description": "Calendar identifier of the target calendar where the event is to be moved to.",
               "required": true,
               "location": "query"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId",
              "destination"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "patch": {
             "id": "calendar.events.patch",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PATCH",
             "description": "Updates an event. This method supports patch semantics.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "quickAdd": {
             "id": "calendar.events.quickAdd",
             "path": "calendars/{calendarId}/events/quickAdd",
             "httpMethod": "POST",
             "description": "Creates an event based on a simple text string.",
             "parameters": {
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the creation of the event. Optional. The default is False.",
               "location": "query"
              },
              "text": {
               "type": "string",
               "description": "The text describing the event to be created.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "text"
             ],
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "update": {
             "id": "calendar.events.update",
             "path": "calendars/{calendarId}/events/{eventId}",
             "httpMethod": "PUT",
             "description": "Updates an event.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "eventId": {
               "type": "string",
               "description": "Event identifier.",
               "required": true,
               "location": "path"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "sendNotifications": {
               "type": "boolean",
               "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId",
              "eventId"
             ],
             "request": {
              "$ref": "Event"
             },
             "response": {
              "$ref": "Event"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar"
             ]
            },
            "watch": {
             "id": "calendar.events.watch",
             "path": "calendars/{calendarId}/events/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Events resources.",
             "parameters": {
              "alwaysIncludeEmail": {
               "type": "boolean",
               "description": "Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
               "location": "query"
              },
              "calendarId": {
               "type": "string",
               "description": "Calendar identifier.",
               "required": true,
               "location": "path"
              },
              "iCalUID": {
               "type": "string",
               "description": "Specifies event ID in the iCalendar format to be included in the response. Optional.",
               "location": "query"
              },
              "maxAttendees": {
               "type": "integer",
               "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
               "enum": [
                "startTime",
                "updated"
               ],
               "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)",
                "Order by last modification time (ascending)."
               ],
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "privateExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
               "location": "query"
              },
              "sharedExtendedProperty": {
               "type": "string",
               "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
               "repeated": true,
               "location": "query"
              },
              "showDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
               "location": "query"
              },
              "showHiddenInvitations": {
               "type": "boolean",
               "description": "Whether to include hidden invitations in the result. Optional. The default is False.",
               "location": "query"
              },
              "singleEvents": {
               "type": "boolean",
               "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              },
              "timeMax": {
               "type": "string",
               "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time.",
               "format": "date-time",
               "location": "query"
              },
              "timeMin": {
               "type": "string",
               "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time.",
               "format": "date-time",
               "location": "query"
              },
              "timeZone": {
               "type": "string",
               "description": "Time zone used in the response. Optional. The default is the time zone of the calendar.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.",
               "format": "date-time",
               "location": "query"
              }
             },
             "parameterOrder": [
              "calendarId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "freebusy": {
           "methods": {
            "query": {
             "id": "calendar.freebusy.query",
             "path": "freeBusy",
             "httpMethod": "POST",
             "description": "Returns free/busy information for a set of calendars.",
             "request": {
              "$ref": "FreeBusyRequest"
             },
             "response": {
              "$ref": "FreeBusyResponse"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            }
           }
          },
          "settings": {
           "methods": {
            "get": {
             "id": "calendar.settings.get",
             "path": "users/me/settings/{setting}",
             "httpMethod": "GET",
             "description": "Returns a single user setting.",
             "parameters": {
              "setting": {
               "type": "string",
               "description": "The id of the user setting.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "setting"
             ],
             "response": {
              "$ref": "Setting"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ]
            },
            "list": {
             "id": "calendar.settings.list",
             "path": "users/me/settings",
             "httpMethod": "GET",
             "description": "Returns all user settings for the authenticated user.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "Settings"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "calendar.settings.watch",
             "path": "users/me/settings/watch",
             "httpMethod": "POST",
             "description": "Watch for changes to Settings resources.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Token specifying which result page to return. Optional.",
               "location": "query"
              },
              "syncToken": {
               "type": "string",
               "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.readonly"
             ],
             "supportsSubscription": true
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:55:10 GMT
- request:
    method: get
    uri: https://www.googleapis.com/calendar/v3/calendars/<DEFAULT_CALENDAR_ID>/events?timeMax=2015-02-06T23:59:59-05:00&timeMin=2015-02-05T00:00:00-05:00
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        HorizonDashboard/0.0.1 google-api-ruby-client/0.8.2 Mac OS X/10.9.5
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.EQGmqw8_DpIRfeTfZ_kO3kWKwHkq_ZYHH0gLqoN3dKgrIT0QZjFWJrpJXNy9MdluIX8e3FVTpflajw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 05 Feb 2015 20:55:12 GMT
      Date:
      - Thu, 05 Feb 2015 20:55:12 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=0.02
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        i/sPSc8W+3nr161/ATN+I9fqGAAA
    http_version: 
  recorded_at: Thu, 05 Feb 2015 20:55:11 GMT
recorded_with: VCR 2.9.3
